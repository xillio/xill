<?xml version="1.0" encoding="utf-8"?>
<function>
    <description>
Execute a query (prepared statement). Queries are parametrized using this format:

    "SELECT * from table WHERE column=:name".

In this case the parameter "name" can be set by passing query an object containing the key "name".
The colon signifies a parameter. Parameters names can contain upper and lower case letters, underscores and
numbers. A colon which should not start a parameter in a query can be escaped with a double backslash.  
A list of objects can be passed in the parameters argument and a batch query will be executed. Passing a list of
parameters should only be done for select/update/delete queries. All objects in the list should at least contain
the query parameters as keys.  

The connection parameter is optional, if not given the last created connection will be used.  
the timeout parameter is optional. The default is set to 30 seconds. when the query takes longer than the given
timeout it will stop. A timeout of 0 means that there is no limit.  
Returns an iterator containing an update count for each insert/update/delete and an object for each selected row
in the case of a select.
    </description>
    <examples>
        <example>
            <header>Insert a single rows into an Oracle database, with the timeout set to 10 seconds and using the
                connection from the 'con' variable (both are optional)
            </header>
            <code>
                use Database;

                var con = Database.connect("localhost:1521:orcl", "oracle", "user", "pass");
                var result = Database.query("INSERT INTO table VALUES(:value1, :value2)", {"value1":1,
                "value2":2},10,con);
            </code>
        </example>
        <example>
            <header>Insert multiple rows into a MySQL database</header>
            <code>
                use Database;

                var con = Database.connect(
                    "localhost:3306/testdb",
                    "mysql",
                    "user",
                    "pass"
                );

                var result = Database.query(
                    "INSERT INTO table VALUES(:value1, :value2)",
                    [
                        {"value1":1,"value2":2},
                        {"value1":2,"value2":3},
                        {"value1":3,"value2":4}
                    ]
                );
            </code>
        </example>
    </examples>
    <references>
        <reference>mysqlConnect</reference>
        <reference>mssqlConnect</reference>
        <reference>oracleConnect</reference>
        <reference>sqliteConnect</reference>
        <reference>rawQuery</reference>
        <reference>getObject</reference>
        <reference>storeObject</reference>
        <reference>System.print</reference>
    </references>
    <tags>
        MySQL, MSSQL, SQL Server, Oracle, SQLite, query, connect, SQL, insert, select, update
    </tags>
</function>
 
