/**
 * This is the root build file for this repository
 */
//region Initialization
buildscript {
    apply from: file('gradle/xillio/buildscript.gradle'), to: buildscript
}
plugins {
    id "org.sonarqube" version "1.0"
    id "com.google.osdetector" version "1.3.1"
    id "com.github.hierynomus.license" version "0.11.0"
}

//region Version
def buildNo = System.env.BUILD_NUMBER

if ("origin/master" == System.env.GIT_BRANCH) {
    println "Building release on master branch"
    project.version = version;
} else if(buildNo == null) {
    println "Building application locally"
    project.version = version;
} else {
    def result = version + "_" + buildNo;
    println "This is not the master branch, version is " + result;
    project.version = result;
}
//endregion

// Set defaults for children
allprojects {
    apply from: rootProject.file('gradle/xillio/xillio.gradle')
    apply from: rootProject.file('gradle/base.gradle')
}
//endregion

dependencies {
    compile project(':api')
}

//region Deployment
def osName = osdetector.classifier
if ("linux" == osdetector.os) {
    osName += "-" + getLinuxReleaseSuffix()
}
distributeZip.classifier osName

def getLinuxReleaseSuffix() {
    if (osdetector.release.isLike('debian')) {
        return 'debian'
    } else if (osdetector.release.isLike('redhat')) {
        return 'redhat'
    } else {
        return 'other'
    }
}
//endregion
//region Plugins
task copyToPluginsDir(type: Copy) {
    dependsOn project(':ide').jar
    from project(':ide').jar
    dependsOn project(':processor').jar
    from project(':processor').jar
    from configurations.runtime
    from project(':ide').configurations.runtime
    from project(':processor').configurations.runtime
    into new File(pluginsDir, 'core')
}

task assembleContentTools() {
    group 'build'
    description 'Build and prepare all plugins for runtime'

    dependsOn copyToPluginsDir
}

clean {
    delete pluginsDir, file('ESConsole'), file('helpfiles')
}
//endregion

apply from: file('gradle/javafx.gradle')