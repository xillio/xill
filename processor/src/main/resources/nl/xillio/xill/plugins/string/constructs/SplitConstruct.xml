<?xml version="1.0" encoding="utf-8"?>
<function>
    <description>
Splits the string value into a list of strings based on the provided delimiter, and returns that list.

The delimiter is interpreted as a Java regular expression, but since all backslash characters will be interpreted as
an escape character for the next one by Xill all backslashes you want to be evaluated by the regex have to be doubled.
This means that "\\\\\\\\" would denote a single literal backslash "\", and "\\\\\*" would denote a literal asterisk "\*".
By default empty entries are skipped, but you can set keepEmpty to true to also add empty entries to the resulting list.
    </description>
    <examples>
        <example title="Usage">
            <header>Splitting a string</header>
            <code>
                use String;

                String.split("a--b---c", "-");
                // Result: ["a", "b", "c"]

                String.split("a--b---c", "-", true);
                // Result: ["a", "", "b", "", "", "c"]
            </code>
        </example>
    </examples>
</function>