<?xml version="1.0" encoding="utf-8"?>
<function>
    <description>
Write content to an output stream.
If the source parameter contains binary data, consume that data.
Otherwise the string value of the source parameter will be written to the target stream.

This construct accepts a limit parameter, when this parameter is provided this construct will stop writing at X
bytes where X is the number value passed to the limit parameter. When limit is -1, all bytes will be written.

This construct accepts outputCharset and inputCharset parameters. These cause the target and source respectively
to be read using the given character sets. When these are null, the default character set is used. When the source
parameter is a string, the inputCharset is ignored.
    </description>
    <examples>
        <example title="Usage">
            <header>Write 3 lines to a file</header>
            <code>
                use File, Stream;

                var target = File.openWrite("./target.txt");

                Stream.write("Hello World\n", target);
                Stream.write("Hello World\n", target);
                Stream.write("Hello World\n", target);
            </code>
            <header>Copy a file</header>
            <code>
                use File, Stream;

                var source = File.openRead("./source.txt");
                var target = File.openWrite("./source-copy.txt");
                Stream.write(source, target);
            </code>
        </example>
    </examples>
    <references>
        <reference>File.openRead</reference>
        <reference>File.openAppend</reference>
        <reference>File.openWrite</reference>
    </references>
    <tags>
        read, write, append, text, content, create
    </tags>
</function>
