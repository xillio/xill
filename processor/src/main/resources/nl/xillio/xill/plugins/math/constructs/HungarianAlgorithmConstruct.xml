<?xml version="1.0" encoding="utf-8"?>
<function>
    <description>
Solves the optimal assignment problem using the Hungarian Algorithm on matrix, which is a two-dimensional list containing numbers.  

Returns the optimal combination of rows / columns and the optimal sum as an object.  
The optional argument max (defaults to true) defines whether maximum sum or minimum sum should be returned.  
Useful for calculating optimal costs or income based on a matrix.

The algorithm treats the list as a matrix checks each column and calculates in which row the maximum value is found.
Then it marks this row down and adds that number to the sum.
However, each row and each column may only be used once so it will try all interesting combinations and return only the optimum.
    </description>
    <examples>
        <example title="Usage">
            <code>
                use Math, System;

                var matrix = [[0,1,3], [2,2,3], [5,4,1]];
                System.print(Math.hungarianAlgorithm(matrix, true));
                
                // Result: 
                // [
                //     {
                //         "sum" : 10.0
                //     },
                //     {
                //         "cells" : [
                //             {"row":0, "col":2},
                //             {"row":1, "col":1},
                //             {"row":2, "col":0}
                //         ]
                //     }
                // ]
            </code>
        </example>
    </examples>
</function>