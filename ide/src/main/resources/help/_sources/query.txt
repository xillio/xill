-----
query
-----

**query (**\ *string* **query,** *number* **timeout*,** *<string,void>* **connectionstring*)**

Description
-----------

Executes the string ``query`` as an SQL-statement on the active database. Returns an iterable result if the query yields results or ``null`` if it does not. Returns the number of updated rows in case of an INSERT or UPDATE. Queries will automatically time-out after 30 seconds, you can optionally specify a different ``timeout`` in seconds. A timeout of 0 indicates that you do not want the query to time out. The optional parameter ``connectionstring`` is a string identifiying the database connection as returned by the :doc:`database` function. If no connection is given then the last used database connection will be used.

See also: :doc:`database`.

Examples
--------

-

    Loop through unvisited pages (assuming a certain database layout and a bot ``settings.sbot`` are present):
    
    ::
    
        settings = global(callbot("bots/settings.sbot"));
        database(settings.db_host, settings.db_port, settings.db_name, settings.db_user, settings.db_pass);
        result = query("SELECT COUNT(*) FROM pages WHERE visited = 'n'");
        foreach(_, r, result) {
            pagecount = r;
        }

-
    
    Store a log entry (assuming a certain database layout is present):
    
    ::
    
        writeLog = routine(pageid, subject, entry){
            if (!debug){
                query("INSERT INTO transformation_log VALUES ('"+pageid+"','"+subject+"','"+entry+"',CURRENT_TIMESTAMP)");
            }
            if (subject != ""){
                log("\t"+subject + " - " + entry);
            }else{
                log("\t"+entry);
            }
        }

Tags
----

:doc:`_tag_database`