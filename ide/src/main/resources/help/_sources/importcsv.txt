---------
importcsv
---------

**importcsv (**\ *string* **table,** *string* **uri,** *string* **enclosingchar,** *string* **seperatorchar,** *string* **lineendchar,** *<string,void>* **connectionstring*)**

Description
-----------

Drops / creates the database table ``table`` and then imports the CSV data from the csv file ``uri``; ``enclosingchar`` indicates a character that is used to enclose fields, e.g. ``'"'``; ``seperatorchar`` indicates the character used to separate fields, e.g. ``','``; ``lineendchar`` indicates the character used to end lines, e.g ``'\n'``. The optional parameter ``connectionstring`` is a string identifying the database connection as returned by the ``database`` function.

Example
-------

-

    Assuming we have a text file ``C:\tmp\test.csv`` which contains:
    
    ::
    
        'key','value'
        '10','34'
        '11','56'
        '12','34'
        '14','100'
        
    Then to create the database table ``test`` we would execute:
    
    ::
    
        settings = global(callbot("testbots/settings.sbot"));
        database(settings.db_host, settings.db_port, settings.db_name, settings.db_user, settings.db_pass);
        
        importcsv ("test", "C:/tmp/test.csv", "\\'", ",", "\\r\\n");
        
    Note the needed number of escaping slashes to forward the correct commands to MySQL. Since we want MySQL to see ``"\n"`` we need to escape the backslash ``\`` by using ``\\``.
        
Tags
----

:doc:`_tag_database`, :doc:`_tag_file`