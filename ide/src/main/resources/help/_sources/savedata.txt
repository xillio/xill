--------
savedata
--------

**savedata (**\ *string* **uri,** *<void,string,download,node,xml,binary>* **value,** *boolean* **append*,** *boolean* **overwrite*,** *boolean* **createdirs*,** *string* **encoding*)**

Description
-----------

Saves the variable ``value`` to the local file ``uri``. The optional parameters ``append``, ``overwrite`` and ``createdirs`` are booleans. By default, required dirs will be created, existing files will be overwritten and not appended.
The optional parameter ``encoding`` defaults to "UTF-8". Acceptable values are "US-ASCII", "ISO-8859-1", "UTF-8", "UTF-16BE", "UTF-16LE", and "UTF-16". Any other values depend on your used java implementation.

Examples
--------

-
    
    Store a sentence in a text file:
    
    ::
    
        uri = "C:/tmp/xillio.txt";
        savedata (uri, "Xillio - migration and search");

     
-
    
    Store a sentence in a text file using ISO-8859-1 (a.k.a. ISO-LATIN-1) encoding:
    
    ::
    
        uri = "C:/tmp/xillio.txt";
		savedata (uri, "Xillio - migration and search - Swëdish chòf stýlâ", false, true, true, "ISO-8859-1");
     
-
    
    Create an XML-file by appending (with some error checking):
    
    ::

        filename = global(settings.transformation_path + "/xml/structure/media_structure.xml");
        header = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Structure startnode=\"Root\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n";
        footer = "\n</Structure>";
        error = geterror(savedata(filename, "", false, true, true));
        if (error != null) {
            log(error.type + ": " + error.message);
            return();
        }
        // Header
        savedata(filename, header, true);
        // Body
        // the id of root is "0"
        savedata(filename, build_nav_tree("0", "0", 1), true);
        // Footer
        savedata(filename, footer, true);
        
    Note: build_nav_tree is a project specific function not listed here
    
Tags
----

:doc:`_tag_file`