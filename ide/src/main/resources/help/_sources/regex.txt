-----
regex
-----

**regex (**\ *<void,string>* **value,** *string* **regex,** *number* **timeout*)**

Description
-----------

Returns a list of regular expression matches of string ``regex`` on the string ``value``. Note that the result will be a list which contains the entire string ``value`` as the first entry and after that one or more matching groups. ``regex`` must always match the entire string ``value``.

Optionally a ``timeout`` can be provided in seconds, the default value is 5 seconds. Set ``timeout`` to zero to let the function run without timeout. This should only be altered when dealing with large source documents. The timeout is there to protect the system from hanging on invalid expressions.

See the :doc:`_tag_regex` page for more about Regular Expression support in Content Tools.

Examples
--------

-
    Determining the file extension contained in a URL:
    
    ::
    
        url = "http://www.xillio.com/wp-content/uploads/screenshot-ns-website.png";
        log (getextension (url));
        getextension = routine(url) {
            file = regex(url, "http.*/(.*?)\.(.*?)");
                        
            if ( file != null) {
                return(file[2]); //get the second matching group
            } else {
                log("ERROR: binary url is not valid." + url);
            }
        }
        
    will print:
    
    ::
        
        png
        
-
    
    Detect md5 hashes in <a> tags (to get page id's in certain CMS's):
    
    ::
        
        linkid = "";
        id_regex = regex(contentstring, "(?is).*<a\s[^>]*href=\"([a-f0-9]{32})\".*?>.*");
        if (variabletype(id_regex) == "list") {
            linkid = id_regex[1];
        }

Tags
----

:doc:`_tag_text`, :doc:`_tag_regex`