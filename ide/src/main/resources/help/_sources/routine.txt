-------
routine
-------

**routine ()**

Description
-----------

Defines a custom routine with predefined arguments, which always are of any type. Use the ``return()`` statement to return a value from the routine.

Examples
--------

-
    
    Routine with one parameter:
    
    ::

        getlanguagemeta = routine (page) {
            return (xpath(page, "/html/@lang"));
        }
        
-

    Returning an object:
    
    ::
    
        settings = {
            "baseurl" = "http://www.xillio.com",
            "gxtest_url" = "https://www.xillio.com/xilliogximporter",
        };

        return(settings);
        
-

    Routine with multiple parameters:
    
    ::
    
        storelog = routine (message, type, sourceurl, targeturl, level){
        // Store a log message with the current time as timestamp, level is optional and will be set to "info" if left out.
        // For message types like "brokenlink" a source and target url can be filled in.

            level = level; // Default parameter value hack. If left out level might be null and not set in this context. So it would be set 
                           // only within the following if statement.
            if (level == null) {
                level = "info";
            }
            timestamp = datetostring (null, "", "yyyyMMdd-HHmmss-SSS");
            logobject = {
                "logid" = md5(sourceurl + message + timestamp),
                "type" = type,
                "level" = level,
                "timestamp" = timestamp,
                "message" = message,
                "sourceurl" = sourceurl,
                "targeturl" = targeturl,
            };
            storeobject ("logs", logobject, "logid");
        }
        
-

    Routine without parameters:
    
    ::
    
        // Single sign-on login
        ssologin = routine() {
            home = loadpage(server_url);
            if(variabletype(home) != "string") {
                username = xpath(home, "//input[@id='username']");
                input(username, server_acc);
                pwd = xpath(home, "//input[@id='password']");
                input(pwd, server_pwd);
                button = xpath(home, "//button[@name='login']");
                after_login = click(button);
            }
        }

Tags
----

:doc:`_tag_language`