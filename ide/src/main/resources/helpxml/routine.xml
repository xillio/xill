<?xml version="1.0" encoding="utf-8"?>
<function Tag="routine">
  <name>routine</name>
  <parameters />
  <description><![CDATA[Defines a custom routine with predefined arguments, which always are of any type. Use the return() statement to return a value from the routine.]]></description>
  <examples>
    <example description="Routine with one parameter:"><![CDATA[getlanguagemeta = routine (page) {
    return (xpath(page, "/html/@lang"));
}
]]></example>
    <example description="Returning an object:"><![CDATA[settings = {
    "baseurl" = "http://www.xillio.com",
    "gxtest_url" = "https://www.xillio.com/xilliogximporter",
};
]]></example>
    <example description="return(settings);"><![CDATA[]]></example>
    <example description="Routine with multiple parameters:"><![CDATA[storelog = routine (message, type, sourceurl, targeturl, level){
// Store a log message with the current time as timestamp, level is optional and will be set to "info" if left out.
// For message types like "brokenlink" a source and target url can be filled in.
]]></example>
    <example description="    level = level; // Default parameter value hack. If left out level might be null and not set in this context. So it would be set"><![CDATA[                   // only within the following if statement.
    if (level == null) {
        level = "info";
    }
    timestamp = datetostring (null, "", "yyyyMMdd-HHmmss-SSS");
    logobject = {
        "logid" = md5(sourceurl + message + timestamp),
        "type" = type,
        "level" = level,
        "timestamp" = timestamp,
        "message" = message,
        "sourceurl" = sourceurl,
        "targeturl" = targeturl,
    };
    storeobject ("logs", logobject, "logid");
}
]]></example>
    <example description="Routine without parameters:"><![CDATA[// Single sign-on login
ssologin = routine() {
    home = loadpage(server_url);
    if(variabletype(home) != "string") {
        username = xpath(home, "//input[@id='username']");
        input(username, server_acc);
        pwd = xpath(home, "//input[@id='password']");
        input(pwd, server_pwd);
        button = xpath(home, "//button[@name='login']");
        after_login = click(button);
    }
}
]]></example>
  </examples>
  <Applications />
  <tags>
    <tag>Language</tag>
  </tags>
</function>